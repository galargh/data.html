(ns data.html.numeric-character)

(def ^:private ^:const ascii-whitespace-character-references
  #{0x0009 0x000A 0x000C 0x000D 0x0020})
(def ^:private ^:const noncharacter-character-references
  #{0xFFFE 0xFFFF 0x1FFFE 0x1FFFF 0x2FFFE 0x2FFFF 0x3FFFE 0x3FFFF 0x4FFFE
    0x4FFFF 0x5FFFE 0x5FFFF 0x6FFFE 0x6FFFF 0x7FFFE 0x7FFFF 0x8FFFE 0x8FFFF
    0x9FFFE 0x9FFFF 0xAFFFE 0xAFFFF 0xBFFFE 0xBFFFF 0xCFFFE 0xCFFFF 0xDFFFE
    0xDFFFF 0xEFFFE 0xEFFFF 0xFFFFE 0xFFFFF 0x10FFFE 0x10FFFF})
(def ^:const numeric-character-references
  {0x80 0x20AC,
   0x82 0x201A,
   0x83 0x0192,
   0x84 0x201E,
   0x85 0x2026,
   0x86 0x2020,
   0x87 0x2021,
   0x88 0x02C6,
   0x89 0x2030,
   0x8A 0x0160,
   0x8B 0x2039,
   0x8C 0x0152,
   0x8E 0x017D,
   0x91 0x2018,
   0x92 0x2019,
   0x93 0x201C,
   0x94 0x201D,
   0x95 0x2022,
   0x96 0x2013,
   0x97 0x2014,
   0x98 0x02DC,
   0x99 0x2122,
   0x9A 0x0161,
   0x9B 0x203A,
   0x9C 0x0153,
   0x9E 0x017E,
   0x9F 0x0178})

(defn null-character-reference? [number] (= number 0x00))
(defn character-reference-outside-unicode-range? [number] (> number 0x10FFFF))
(defn surrogate-character-reference?
  [number]
  (and (>= number 0xD800) (<= number 0xDFFF)))
(defn noncharacter-character-reference?
  [number]
  (or (and (>= number 0xFDD0) (<= number 0xFDEF))
      (contains? noncharacter-character-references number)))
(defn control-character-reference?
  [number]
  (or (= number 0x0D)
      (and (or (and (>= number 0x0000) (<= number 0x001F))
               (and (>= number 0x007F) (<= number 0x009F)))
           (not (contains? ascii-whitespace-character-references number)))))
